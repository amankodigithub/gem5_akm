// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inst_dep_record.proto

#ifndef PROTOBUF_inst_5fdep_5frecord_2eproto__INCLUDED
#define PROTOBUF_inst_5fdep_5frecord_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoMessage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
void protobuf_AssignDesc_inst_5fdep_5frecord_2eproto();
void protobuf_ShutdownFile_inst_5fdep_5frecord_2eproto();

class InstDepRecordHeader;
class InstDepRecord;

enum InstDepRecord_RecordType {
  InstDepRecord_RecordType_INVALID = 0,
  InstDepRecord_RecordType_LOAD = 1,
  InstDepRecord_RecordType_STORE = 2,
  InstDepRecord_RecordType_COMP = 3
};
bool InstDepRecord_RecordType_IsValid(int value);
const InstDepRecord_RecordType InstDepRecord_RecordType_RecordType_MIN = InstDepRecord_RecordType_INVALID;
const InstDepRecord_RecordType InstDepRecord_RecordType_RecordType_MAX = InstDepRecord_RecordType_COMP;
const int InstDepRecord_RecordType_RecordType_ARRAYSIZE = InstDepRecord_RecordType_RecordType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InstDepRecord_RecordType_descriptor();
inline const ::std::string& InstDepRecord_RecordType_Name(InstDepRecord_RecordType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InstDepRecord_RecordType_descriptor(), value);
}
inline bool InstDepRecord_RecordType_Parse(
    const ::std::string& name, InstDepRecord_RecordType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InstDepRecord_RecordType>(
    InstDepRecord_RecordType_descriptor(), name, value);
}
// ===================================================================

class InstDepRecordHeader : public ::google::protobuf::Message {
 public:
  InstDepRecordHeader();
  virtual ~InstDepRecordHeader();

  InstDepRecordHeader(const InstDepRecordHeader& from);

  inline InstDepRecordHeader& operator=(const InstDepRecordHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstDepRecordHeader& default_instance();

  void Swap(InstDepRecordHeader* other);

  // implements Message ----------------------------------------------

  InstDepRecordHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstDepRecordHeader& from);
  void MergeFrom(const InstDepRecordHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string obj_id = 1;
  inline bool has_obj_id() const;
  inline void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  inline const ::std::string& obj_id() const;
  inline void set_obj_id(const ::std::string& value);
  inline void set_obj_id(const char* value);
  inline void set_obj_id(const char* value, size_t size);
  inline ::std::string* mutable_obj_id();
  inline ::std::string* release_obj_id();
  inline void set_allocated_obj_id(::std::string* obj_id);

  // optional uint32 ver = 2 [default = 0];
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 2;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // required uint64 tick_freq = 3;
  inline bool has_tick_freq() const;
  inline void clear_tick_freq();
  static const int kTickFreqFieldNumber = 3;
  inline ::google::protobuf::uint64 tick_freq() const;
  inline void set_tick_freq(::google::protobuf::uint64 value);

  // required uint32 window_size = 4;
  inline bool has_window_size() const;
  inline void clear_window_size();
  static const int kWindowSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 window_size() const;
  inline void set_window_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.InstDepRecordHeader)
 private:
  inline void set_has_obj_id();
  inline void clear_has_obj_id();
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_tick_freq();
  inline void clear_has_tick_freq();
  inline void set_has_window_size();
  inline void clear_has_window_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* obj_id_;
  ::google::protobuf::uint64 tick_freq_;
  ::google::protobuf::uint32 ver_;
  ::google::protobuf::uint32 window_size_;
  friend void  protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
  friend void protobuf_AssignDesc_inst_5fdep_5frecord_2eproto();
  friend void protobuf_ShutdownFile_inst_5fdep_5frecord_2eproto();

  void InitAsDefaultInstance();
  static InstDepRecordHeader* default_instance_;
};
// -------------------------------------------------------------------

class InstDepRecord : public ::google::protobuf::Message {
 public:
  InstDepRecord();
  virtual ~InstDepRecord();

  InstDepRecord(const InstDepRecord& from);

  inline InstDepRecord& operator=(const InstDepRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstDepRecord& default_instance();

  void Swap(InstDepRecord* other);

  // implements Message ----------------------------------------------

  InstDepRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstDepRecord& from);
  void MergeFrom(const InstDepRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InstDepRecord_RecordType RecordType;
  static const RecordType INVALID = InstDepRecord_RecordType_INVALID;
  static const RecordType LOAD = InstDepRecord_RecordType_LOAD;
  static const RecordType STORE = InstDepRecord_RecordType_STORE;
  static const RecordType COMP = InstDepRecord_RecordType_COMP;
  static inline bool RecordType_IsValid(int value) {
    return InstDepRecord_RecordType_IsValid(value);
  }
  static const RecordType RecordType_MIN =
    InstDepRecord_RecordType_RecordType_MIN;
  static const RecordType RecordType_MAX =
    InstDepRecord_RecordType_RecordType_MAX;
  static const int RecordType_ARRAYSIZE =
    InstDepRecord_RecordType_RecordType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RecordType_descriptor() {
    return InstDepRecord_RecordType_descriptor();
  }
  static inline const ::std::string& RecordType_Name(RecordType value) {
    return InstDepRecord_RecordType_Name(value);
  }
  static inline bool RecordType_Parse(const ::std::string& name,
      RecordType* value) {
    return InstDepRecord_RecordType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 seq_num = 1;
  inline bool has_seq_num() const;
  inline void clear_seq_num();
  static const int kSeqNumFieldNumber = 1;
  inline ::google::protobuf::uint64 seq_num() const;
  inline void set_seq_num(::google::protobuf::uint64 value);

  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::ProtoMessage::InstDepRecord_RecordType type() const;
  inline void set_type(::ProtoMessage::InstDepRecord_RecordType value);

  // optional uint64 p_addr = 3;
  inline bool has_p_addr() const;
  inline void clear_p_addr();
  static const int kPAddrFieldNumber = 3;
  inline ::google::protobuf::uint64 p_addr() const;
  inline void set_p_addr(::google::protobuf::uint64 value);

  // optional uint32 size = 4;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // optional uint32 flags = 5;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 5;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // repeated uint64 rob_dep = 6;
  inline int rob_dep_size() const;
  inline void clear_rob_dep();
  static const int kRobDepFieldNumber = 6;
  inline ::google::protobuf::uint64 rob_dep(int index) const;
  inline void set_rob_dep(int index, ::google::protobuf::uint64 value);
  inline void add_rob_dep(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      rob_dep() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_rob_dep();

  // required uint64 comp_delay = 7;
  inline bool has_comp_delay() const;
  inline void clear_comp_delay();
  static const int kCompDelayFieldNumber = 7;
  inline ::google::protobuf::uint64 comp_delay() const;
  inline void set_comp_delay(::google::protobuf::uint64 value);

  // repeated uint64 reg_dep = 8;
  inline int reg_dep_size() const;
  inline void clear_reg_dep();
  static const int kRegDepFieldNumber = 8;
  inline ::google::protobuf::uint64 reg_dep(int index) const;
  inline void set_reg_dep(int index, ::google::protobuf::uint64 value);
  inline void add_reg_dep(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      reg_dep() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_reg_dep();

  // optional uint32 weight = 9;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 9;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);

  // optional uint64 pc = 10;
  inline bool has_pc() const;
  inline void clear_pc();
  static const int kPcFieldNumber = 10;
  inline ::google::protobuf::uint64 pc() const;
  inline void set_pc(::google::protobuf::uint64 value);

  // optional uint64 v_addr = 11;
  inline bool has_v_addr() const;
  inline void clear_v_addr();
  static const int kVAddrFieldNumber = 11;
  inline ::google::protobuf::uint64 v_addr() const;
  inline void set_v_addr(::google::protobuf::uint64 value);

  // optional uint32 asid = 12;
  inline bool has_asid() const;
  inline void clear_asid();
  static const int kAsidFieldNumber = 12;
  inline ::google::protobuf::uint32 asid() const;
  inline void set_asid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.InstDepRecord)
 private:
  inline void set_has_seq_num();
  inline void clear_has_seq_num();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_p_addr();
  inline void clear_has_p_addr();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_comp_delay();
  inline void clear_has_comp_delay();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_pc();
  inline void clear_has_pc();
  inline void set_has_v_addr();
  inline void clear_has_v_addr();
  inline void set_has_asid();
  inline void clear_has_asid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 seq_num_;
  ::google::protobuf::uint64 p_addr_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > rob_dep_;
  ::google::protobuf::uint64 comp_delay_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 weight_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > reg_dep_;
  ::google::protobuf::uint64 pc_;
  ::google::protobuf::uint64 v_addr_;
  ::google::protobuf::uint32 asid_;
  friend void  protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
  friend void protobuf_AssignDesc_inst_5fdep_5frecord_2eproto();
  friend void protobuf_ShutdownFile_inst_5fdep_5frecord_2eproto();

  void InitAsDefaultInstance();
  static InstDepRecord* default_instance_;
};
// ===================================================================


// ===================================================================

// InstDepRecordHeader

// required string obj_id = 1;
inline bool InstDepRecordHeader::has_obj_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstDepRecordHeader::set_has_obj_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstDepRecordHeader::clear_has_obj_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstDepRecordHeader::clear_obj_id() {
  if (obj_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    obj_id_->clear();
  }
  clear_has_obj_id();
}
inline const ::std::string& InstDepRecordHeader::obj_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.obj_id)
  return *obj_id_;
}
inline void InstDepRecordHeader::set_obj_id(const ::std::string& value) {
  set_has_obj_id();
  if (obj_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    obj_id_ = new ::std::string;
  }
  obj_id_->assign(value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.obj_id)
}
inline void InstDepRecordHeader::set_obj_id(const char* value) {
  set_has_obj_id();
  if (obj_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    obj_id_ = new ::std::string;
  }
  obj_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoMessage.InstDepRecordHeader.obj_id)
}
inline void InstDepRecordHeader::set_obj_id(const char* value, size_t size) {
  set_has_obj_id();
  if (obj_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    obj_id_ = new ::std::string;
  }
  obj_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoMessage.InstDepRecordHeader.obj_id)
}
inline ::std::string* InstDepRecordHeader::mutable_obj_id() {
  set_has_obj_id();
  if (obj_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    obj_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProtoMessage.InstDepRecordHeader.obj_id)
  return obj_id_;
}
inline ::std::string* InstDepRecordHeader::release_obj_id() {
  clear_has_obj_id();
  if (obj_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = obj_id_;
    obj_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InstDepRecordHeader::set_allocated_obj_id(::std::string* obj_id) {
  if (obj_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete obj_id_;
  }
  if (obj_id) {
    set_has_obj_id();
    obj_id_ = obj_id;
  } else {
    clear_has_obj_id();
    obj_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.InstDepRecordHeader.obj_id)
}

// optional uint32 ver = 2 [default = 0];
inline bool InstDepRecordHeader::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstDepRecordHeader::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstDepRecordHeader::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstDepRecordHeader::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 InstDepRecordHeader::ver() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.ver)
  return ver_;
}
inline void InstDepRecordHeader::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.ver)
}

// required uint64 tick_freq = 3;
inline bool InstDepRecordHeader::has_tick_freq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstDepRecordHeader::set_has_tick_freq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstDepRecordHeader::clear_has_tick_freq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstDepRecordHeader::clear_tick_freq() {
  tick_freq_ = GOOGLE_ULONGLONG(0);
  clear_has_tick_freq();
}
inline ::google::protobuf::uint64 InstDepRecordHeader::tick_freq() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.tick_freq)
  return tick_freq_;
}
inline void InstDepRecordHeader::set_tick_freq(::google::protobuf::uint64 value) {
  set_has_tick_freq();
  tick_freq_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.tick_freq)
}

// required uint32 window_size = 4;
inline bool InstDepRecordHeader::has_window_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstDepRecordHeader::set_has_window_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstDepRecordHeader::clear_has_window_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstDepRecordHeader::clear_window_size() {
  window_size_ = 0u;
  clear_has_window_size();
}
inline ::google::protobuf::uint32 InstDepRecordHeader::window_size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.window_size)
  return window_size_;
}
inline void InstDepRecordHeader::set_window_size(::google::protobuf::uint32 value) {
  set_has_window_size();
  window_size_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.window_size)
}

// -------------------------------------------------------------------

// InstDepRecord

// required uint64 seq_num = 1;
inline bool InstDepRecord::has_seq_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstDepRecord::set_has_seq_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstDepRecord::clear_has_seq_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstDepRecord::clear_seq_num() {
  seq_num_ = GOOGLE_ULONGLONG(0);
  clear_has_seq_num();
}
inline ::google::protobuf::uint64 InstDepRecord::seq_num() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.seq_num)
  return seq_num_;
}
inline void InstDepRecord::set_seq_num(::google::protobuf::uint64 value) {
  set_has_seq_num();
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.seq_num)
}

// required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
inline bool InstDepRecord::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstDepRecord::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstDepRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstDepRecord::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ProtoMessage::InstDepRecord_RecordType InstDepRecord::type() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.type)
  return static_cast< ::ProtoMessage::InstDepRecord_RecordType >(type_);
}
inline void InstDepRecord::set_type(::ProtoMessage::InstDepRecord_RecordType value) {
  assert(::ProtoMessage::InstDepRecord_RecordType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.type)
}

// optional uint64 p_addr = 3;
inline bool InstDepRecord::has_p_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstDepRecord::set_has_p_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstDepRecord::clear_has_p_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstDepRecord::clear_p_addr() {
  p_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_p_addr();
}
inline ::google::protobuf::uint64 InstDepRecord::p_addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.p_addr)
  return p_addr_;
}
inline void InstDepRecord::set_p_addr(::google::protobuf::uint64 value) {
  set_has_p_addr();
  p_addr_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.p_addr)
}

// optional uint32 size = 4;
inline bool InstDepRecord::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstDepRecord::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstDepRecord::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstDepRecord::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 InstDepRecord::size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.size)
  return size_;
}
inline void InstDepRecord::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.size)
}

// optional uint32 flags = 5;
inline bool InstDepRecord::has_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstDepRecord::set_has_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstDepRecord::clear_has_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstDepRecord::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 InstDepRecord::flags() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.flags)
  return flags_;
}
inline void InstDepRecord::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.flags)
}

// repeated uint64 rob_dep = 6;
inline int InstDepRecord::rob_dep_size() const {
  return rob_dep_.size();
}
inline void InstDepRecord::clear_rob_dep() {
  rob_dep_.Clear();
}
inline ::google::protobuf::uint64 InstDepRecord::rob_dep(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.rob_dep)
  return rob_dep_.Get(index);
}
inline void InstDepRecord::set_rob_dep(int index, ::google::protobuf::uint64 value) {
  rob_dep_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.rob_dep)
}
inline void InstDepRecord::add_rob_dep(::google::protobuf::uint64 value) {
  rob_dep_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoMessage.InstDepRecord.rob_dep)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
InstDepRecord::rob_dep() const {
  // @@protoc_insertion_point(field_list:ProtoMessage.InstDepRecord.rob_dep)
  return rob_dep_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
InstDepRecord::mutable_rob_dep() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.InstDepRecord.rob_dep)
  return &rob_dep_;
}

// required uint64 comp_delay = 7;
inline bool InstDepRecord::has_comp_delay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InstDepRecord::set_has_comp_delay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InstDepRecord::clear_has_comp_delay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InstDepRecord::clear_comp_delay() {
  comp_delay_ = GOOGLE_ULONGLONG(0);
  clear_has_comp_delay();
}
inline ::google::protobuf::uint64 InstDepRecord::comp_delay() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.comp_delay)
  return comp_delay_;
}
inline void InstDepRecord::set_comp_delay(::google::protobuf::uint64 value) {
  set_has_comp_delay();
  comp_delay_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.comp_delay)
}

// repeated uint64 reg_dep = 8;
inline int InstDepRecord::reg_dep_size() const {
  return reg_dep_.size();
}
inline void InstDepRecord::clear_reg_dep() {
  reg_dep_.Clear();
}
inline ::google::protobuf::uint64 InstDepRecord::reg_dep(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.reg_dep)
  return reg_dep_.Get(index);
}
inline void InstDepRecord::set_reg_dep(int index, ::google::protobuf::uint64 value) {
  reg_dep_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.reg_dep)
}
inline void InstDepRecord::add_reg_dep(::google::protobuf::uint64 value) {
  reg_dep_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoMessage.InstDepRecord.reg_dep)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
InstDepRecord::reg_dep() const {
  // @@protoc_insertion_point(field_list:ProtoMessage.InstDepRecord.reg_dep)
  return reg_dep_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
InstDepRecord::mutable_reg_dep() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.InstDepRecord.reg_dep)
  return &reg_dep_;
}

// optional uint32 weight = 9;
inline bool InstDepRecord::has_weight() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InstDepRecord::set_has_weight() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InstDepRecord::clear_has_weight() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InstDepRecord::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 InstDepRecord::weight() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.weight)
  return weight_;
}
inline void InstDepRecord::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.weight)
}

// optional uint64 pc = 10;
inline bool InstDepRecord::has_pc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InstDepRecord::set_has_pc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InstDepRecord::clear_has_pc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InstDepRecord::clear_pc() {
  pc_ = GOOGLE_ULONGLONG(0);
  clear_has_pc();
}
inline ::google::protobuf::uint64 InstDepRecord::pc() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.pc)
  return pc_;
}
inline void InstDepRecord::set_pc(::google::protobuf::uint64 value) {
  set_has_pc();
  pc_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.pc)
}

// optional uint64 v_addr = 11;
inline bool InstDepRecord::has_v_addr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void InstDepRecord::set_has_v_addr() {
  _has_bits_[0] |= 0x00000400u;
}
inline void InstDepRecord::clear_has_v_addr() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void InstDepRecord::clear_v_addr() {
  v_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_v_addr();
}
inline ::google::protobuf::uint64 InstDepRecord::v_addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.v_addr)
  return v_addr_;
}
inline void InstDepRecord::set_v_addr(::google::protobuf::uint64 value) {
  set_has_v_addr();
  v_addr_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.v_addr)
}

// optional uint32 asid = 12;
inline bool InstDepRecord::has_asid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void InstDepRecord::set_has_asid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void InstDepRecord::clear_has_asid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void InstDepRecord::clear_asid() {
  asid_ = 0u;
  clear_has_asid();
}
inline ::google::protobuf::uint32 InstDepRecord::asid() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.asid)
  return asid_;
}
inline void InstDepRecord::set_asid(::google::protobuf::uint32 value) {
  set_has_asid();
  asid_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.asid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ProtoMessage::InstDepRecord_RecordType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMessage::InstDepRecord_RecordType>() {
  return ::ProtoMessage::InstDepRecord_RecordType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_inst_5fdep_5frecord_2eproto__INCLUDED
